import streamlit as st
import pandas as pd
import os
import pickle
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split


DATA_PATH = r"C:\Users\HP\Downloads\advertising.csv"
MODEL_PATH = "sales_model.pkl"


st.set_page_config(page_title="Sales Prediction App", layout="centered")
st.title("ðŸ“Š Real-Time Sales Prediction using Advertising Data")


@st.cache_data
def load_data():
    try:
        data = pd.read_csv(DATA_PATH)
        return data
    except Exception as e:
        st.error(f"Error loading dataset: {e}")
        return None


def train_and_save_model(data):
    X = data[["TV", "Radio", "Newspaper"]]
    y = data["Sales"]

    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    model = LinearRegression()
    model.fit(X_train, y_train)

    with open(MODEL_PATH, "wb") as f:
        pickle.dump(model, f)

    return model


def get_model(data):
    if os.path.exists(MODEL_PATH):
        with open(MODEL_PATH, "rb") as f:
            return pickle.load(f)
    else:
        return train_and_save_model(data)


df = load_data()

if df is not None:
    st.write("### Preview of Dataset", df.head())

    model = get_model(df)


    st.write("### ðŸ”® Make a Sales Prediction")

    tv = st.number_input("TV Advertising Budget ($k)", min_value=0.0, step=1.0)
    radio = st.number_input("Radio Advertising Budget ($k)", min_value=0.0, step=1.0)
    newspaper = st.number_input("Newspaper Advertising Budget ($k)", min_value=0.0, step=1.0)

    if st.button("Predict Sales"):
        input_df = pd.DataFrame([[tv, radio, newspaper]], columns=["TV", "Radio", "Newspaper"])
        prediction = model.predict(input_df)[0]
        st.success(f"ðŸ“ˆ Predicted Sales: {round(prediction, 2)} units")
